# example docker-compose for running images in production environment
# All mandatory environment variables are required
version: "3.7"
x-rabbitmq:
  - &rabbitmq
    image: ${CONTAINER_REGISTRY_BASE:?Missing mandatory value for CONTAINER_REGISTRY_BASE}/rabbitmq:${IMAGE_TAG:-latest}
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secret cookie here'
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-ergonode}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-ergonode}
    networks:
      ergonode:
        aliases:
          - rabbitmq
    deploy:
      mode: global
      update_config:
        failure_action: rollback
        order: stop-first
x-networks:
  - &ergonode-networks
    networks:
      ergonode:
x-deploy:
  - &ergonode-deploy
    deploy:
      update_config:
        failure_action: rollback
        order: start-first
x-php-environment:
  - &php-environment
      APP_ENV: ${APP_ENV:-prod}
      APP_SECRET: ${APP_SECRET:?Missing mandatory value for APP_SECRET}
      DATABASE_URL: ${DATABASE_URL:?Missing mandatory value for DATABASE_URL}
      JWT_PRIVATE_KEY_PATH: ${JWT_PRIVATE_KEY_PATH:-config/jwt/private.pem}
      JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH:-config/jwt/public.pem}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE:?Missing mandatory value for JWT_PASSPHRASE}
      JWT_TOKEN_TTL: ${JWT_TOKEN_TTL:-3600}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:?Missing mandatory value for CORS_ALLOW_ORIGIN}
      APP_HOST: ${APP_HOST:?Missing mandatory value for APP_HOST}
      APP_SCHEME: ${APP_SCHEME:-https}
      APP_URL: ${APP_URL:?Missing mandatory value for APP_URL}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^localhost|example\.com$}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES}
      MESSENGER_TRANSPORT_DSN: ${MESSENGER_TRANSPORT_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/messages}
      MESSENGER_TRANSPORT_IMPORT_DSN: ${MESSENGER_TRANSPORT_IMPORT_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/import}
      MESSENGER_TRANSPORT_CORE_DSN: ${MESSENGER_TRANSPORT_CORE_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/core}
      MESSENGER_TRANSPORT_EXPORT_DSN: ${MESSENGER_TRANSPORT_EXPORT_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/export}
      MESSENGER_TRANSPORT_DOMAIN_DSN: ${MESSENGER_TRANSPORT_DOMAIN_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/domain}
      MESSENGER_TRANSPORT_CHANNEL_DSN: ${MESSENGER_TRANSPORT_CHANNEL_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/chanel}
      MESSENGER_TRANSPORT_SEGMENT_DSN: ${MESSENGER_TRANSPORT_SEGMENT_DSN:-amqp://ergonode:ergonode@rabbit:5672/%2f/segment}
services:
  php:
    image: ${CONTAINER_REGISTRY_BASE:?Missing mandatory value for CONTAINER_REGISTRY_BASE}/php:${IMAGE_TAG:-latest}
    environment:
      <<: *php-environment
    volumes:
      - "multimedia:/srv/app/public/mutimedia"
      - "import:/srv/app/import"
      - "jwt:/srv/app/config/jwt"
    <<: *ergonode-networks
    <<: *ergonode-deploy
  php-messenger:
    working_dir: /srv/app
    image: ${CONTAINER_REGISTRY_BASE:-ergonode}/php:${IMAGE_TAG:-latest}
    volumes:
      - ./backend:/srv/app
    environment:
      <<: *php-environment
    depends_on:
      - postgres
      - haproxy
    command: bin/console messenger:consume -vv import channel export core  event segment
    restart: always
    healthcheck:
      disable: true
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
    <<: *ergonode-networks
  nuxtjs:
    image: ${CONTAINER_REGISTRY_BASE:?Missing mandatory value for CONTAINER_REGISTRY_BASE}/nuxtjs:${IMAGE_TAG:-latest}
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      API_BASE_URL: ${API_BASE_URL:?Missing mandatory value for API_BASE_URL}
    <<: *ergonode-networks
    <<: *ergonode-deploy
  nginx:
    image: ${CONTAINER_REGISTRY_BASE:?Missing mandatory value for CONTAINER_REGISTRY_BASE}/nginx:${IMAGE_TAG:-latest}
    environment:
      APP_ENV: ${APP_ENV:-prod}
      PHP_HOST: ${PHP_HOST:-php}
      NUXTJS_HOST: ${PHP_HOST:-nuxtjs}
      DOLLAR: "$$"
    volumes:
      - "multimedia:/srv/app/public/mutimedia"
    ports:
      - "${EXPOSED_NGINX_PORT:-80}:80"
    <<: *ergonode-networks
    <<: *ergonode-deploy
    depends_on:
      - php
      - nuxtjs
  consul:
    image: consul:1.7
    networks:
      ergonode:
    healthcheck:
      test: ["CMD", "sh", "-c", "curl --fail http://localhost:8500 || exit 1"]
  haproxy:
    image: ${CONTAINER_REGISTRY_BASE:?Missing mandatory value for CONTAINER_REGISTRY_BASE}/haproxy:${IMAGE_TAG:-latest}
    deploy:
      mode: global
    ports:
      - 15672:15672
    networks:
      ergonode:
        aliases:
          - rabbit
  rabbitmq-01:
    <<: *rabbitmq
    hostname: rabbitmq-01
    volumes:
      - rabbitmq-01:/var/lib/rabbitmq
  rabbitmq-02:
    <<: *rabbitmq
    hostname: rabbitmq-02
    volumes:
      - rabbitmq-02:/var/lib/rabbitmq
  rabbitmq-03:
    <<: *rabbitmq
    hostname: rabbitmq-03
    volumes:
      - rabbitmq-03:/var/lib/rabbitmq
volumes:
  multimedia:
  import:
  jwt:
  rabbitmq-01:
  rabbitmq-02:
  rabbitmq-03:
networks:
  ergonode:
    attachable: true
