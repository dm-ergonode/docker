#docker-compose for development
version: "3.7"
x-cache-from:
  - &ergonode-cache-from
    cache_from:
      - ${CONTAINER_REGISTRY_BASE:-ergonode}/nginx:latest
      - ${CONTAINER_REGISTRY_BASE:-ergonode}/php:latest
      - ${CONTAINER_REGISTRY_BASE:-ergonode}/nuxtjs:latest
      - ${CONTAINER_REGISTRY_BASE:-ergonode}/docsify:latest
services:
  postgres:
    build:
      context: "./"
      target: postgres
      <<: *ergonode-cache-from
    image: ${CONTAINER_REGISTRY_BASE:-ergonode}/postgres:${IMAGE_TAG:-latest}
    volumes:
      - "./data/.postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      APP_USER: ${APP_USER:-ergonode}
      APP_USER_PASSWORD: ${APP_USER_PASSWORD:-123}
      APP_DB: ${APP_DB:-ergonode}
      APP_TEST_DB: ${APP_TEST_DB:-ergonode_test}
    ports:
      - "${EXPOSED_POSTGRES_PORT:-5432}:5432"
    restart: always
  php:
    build:
      context: "./"
      target: php
      <<: *ergonode-cache-from
    working_dir: /srv/app
    image: ${CONTAINER_REGISTRY_BASE:-ergonode}/php:${IMAGE_TAG:-latest}
    volumes:
      - ./backend:/srv/app

    environment:
      XDEBUG_CONFIG: ${XDEBUG_CONFIG:-remote_host=172.17.0.1}
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=localhost}
      APP_URL: ${APP_URL:-http://nginx}
      JWT_PRIVATE_KEY_PATH: ${JWT_PRIVATE_KEY_PATH:-config/jwt/private.pem}
      JWT_PUBLIC_KEY_PATH: ${JWT_PUBLIC_KEY_PATH:-config/jwt/public.pem}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE:-1234}
      PHP_INI_DIRECTIVES: ${PHP_INI_DIRECTIVES:-upload_max_filesize=250M; post_max_size = 250M; memory_limit=256M}
    depends_on:
      - postgres
    links:
      - postgres
    restart: always
  nginx:
    build:
      context: ./
      target: nginx
      <<: *ergonode-cache-from
    image: ${CONTAINER_REGISTRY_BASE:-ergonode}/nginx:${IMAGE_TAG:-latest}
    volumes:
      - ./backend:/srv/app
    working_dir: /srv/app
    environment:
      PHP_HOST: ${PHP_HOST:-php}
      NUXTJS_HOST: ${PHP_HOST:-nuxtjs}
      NGINX_HTTP_DIRECTIVES: ${NGINX_HTTP_DIRECTIVES:-client_max_body_size 250m;}
    ports:
      - "${EXPOSED_NGINX_PORT:-8000}:80"
    depends_on:
      - php
    restart: always
  nuxtjs:
    build:
      context: "./"
      target: nuxtjs
      <<: *ergonode-cache-from
    image: ${CONTAINER_REGISTRY_BASE:-ergonode}/node:${IMAGE_TAG:-latest}
    working_dir: /srv/app
    volumes:
      - "./frontend:/srv/app"
    ports:
      - "${EXPOSED_NODE_PORT:-80}:80"
    environment:
      EXPOSED_NODE_PORT: ${EXPOSED_NODE_PORT:-80}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:8000/api/v1/}
    restart: always
  docsify:
    build:
      context: "./"
      target: docsify
      cache_from:
        - ${CONTAINER_REGISTRY_BASE:-ergonode}/docs:latest
      <<: *ergonode-cache-from
    image: ${CONTAINER_REGISTRY_BASE:-ergonode}/docs:${IMAGE_TAG:-latest}
    working_dir: /srv/app
    volumes:
      - "./docs:/srv/app"
    ports:
      - "${EXPOSED_DOCS_PORT:-8002}:3000"
    restart: always
  rabbitmq-01:
    build:
      context: "./"
      target: rabbitmq-management
      <<: *ergonode-cache-from
    image: ${CONTAINER_REGISTRY_BASE:?Missing mandatory value for CONTAINER_REGISTRY_BASE}/rabbitmq:${IMAGE_TAG:-latest}
    hostname: rabbitmq-01
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-ergonode}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-ergonode}
    ports:
      - "${EXPOSED_RABBITMQ_PORT:-5672}:5672"
      - "${EXPOSED_RABBITMQ_WEB_PORT:-15672}:15672"
